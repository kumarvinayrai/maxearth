{"version":3,"file":"MainNav.vue.mjs","sources":["../../../../../components/pageHeader/MainNav.vue"],"sourcesContent":["<template>\r\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\" :class=\"{ 'fixed-top': isScrolled, 'navbar-shadow': isScrolled }\">\r\n    <div class=\"container\">\r\n      <!-- Logo -->\r\n      <NuxtLink class=\"navbar-brand\" to=\"/\">\r\n        <img :src=\"navbar.logoSrc\" :alt=\"navbar.logoAlt\" height=\"40\" />\r\n      </NuxtLink>\r\n\r\n      <!-- Toggler -->\r\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasNavbar\"\r\n              aria-controls=\"offcanvasNavbar\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <!-- Offcanvas Menu (Mobile) -->\r\n      <div class=\"offcanvas offcanvas-end custom-offcanvas d-lg-none\" id=\"offcanvasNavbar\">\r\n        <div class=\"offcanvas-header\">\r\n          <h5 class=\"offcanvas-title\">{{ navbar.offcanvasTitle }}</h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\"></button>\r\n        </div>\r\n        <div class=\"offcanvas-body\">\r\n          <ul class=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n            <li v-for=\"(item, index) in navbar.navLinks\" :key=\"index\" class=\"nav-item\">\r\n              <NuxtLink class=\"nav-link\" :to=\"item.link\" :class=\"{ active: isActive(item.link) }\"\r\n                        @click=\"handleNav(item.link)\">\r\n                {{ item.text }}\r\n              </NuxtLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Desktop Menu -->\r\n      <div class=\"collapse navbar-collapse d-none d-lg-flex justify-content-end\" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav\">\r\n          <li v-for=\"(item, index) in navbar.navLinks\" :key=\"index\" class=\"nav-item\">\r\n            <NuxtLink class=\"nav-link\" :to=\"item.link\" :class=\"{ active: isActive(item.link) }\"\r\n                      @click=\"handleNav(item.link)\">\r\n              {{ item.text }}\r\n            </NuxtLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onBeforeUnmount } from 'vue'\r\nimport { useRoute, navigateTo } from '#app'\r\n\r\nconst navbar = ref({\r\n  logoSrc: '',\r\n  logoAlt: '',\r\n  offcanvasTitle: '',\r\n  navLinks: []\r\n})\r\n\r\nconst isScrolled = ref(false)\r\nconst route = useRoute()\r\n\r\nasync function loadContentFromTxt() {\r\n  const res = await fetch('/data/navBar.txt')\r\n  const content = await res.text()\r\n  const lines = content.split('\\n')\r\n\r\n  lines.forEach(line => {\r\n    const [key, value] = line.split('=')\r\n    if (!key || !value) return\r\n\r\n    const trimmedKey = key.trim()\r\n    const trimmedValue = value.trim()\r\n\r\n    switch (trimmedKey) {\r\n      case 'navbarLogoSrc':\r\n        navbar.value.logoSrc = trimmedValue\r\n        break\r\n      case 'navbarLogoAlt':\r\n        navbar.value.logoAlt = trimmedValue\r\n        break\r\n      case 'navbarOffcanvasTitle':\r\n        navbar.value.offcanvasTitle = trimmedValue\r\n        break\r\n      case 'navbarLinks':\r\n        navbar.value.navLinks = trimmedValue.split(',').map(pair => {\r\n          const [text, link] = pair.split('|')\r\n          return { text: text.trim(), link: link.trim() }\r\n        })\r\n        break\r\n    }\r\n  })\r\n}\r\n\r\nfunction handleNav(link) {\r\n  if (link.startsWith('#')) {\r\n    const target = document.querySelector(link)\r\n    if (target) {\r\n      const offset = -70\r\n      const top = target.getBoundingClientRect().top + window.scrollY + offset\r\n      window.scrollTo({ top, behavior: 'smooth' })\r\n    }\r\n  } else {\r\n    navigateTo(link)\r\n  }\r\n\r\n  const offcanvas = document.getElementById('offcanvasNavbar')\r\n  if (offcanvas?.classList.contains('show')) {\r\n    bootstrap.Offcanvas.getInstance(offcanvas)?.hide()\r\n  }\r\n}\r\n\r\nfunction isActive(link) {\r\n  return route.path === link || (link.startsWith('#') && route.hash === link)\r\n}\r\n\r\nfunction handleScroll() {\r\n  isScrolled.value = window.scrollY > 50\r\n}\r\n\r\nonMounted(() => {\r\n  loadContentFromTxt()\r\n  if (process.client) window.addEventListener('scroll', handleScroll)\r\n})\r\n\r\nonBeforeUnmount(() => {\r\n  if (process.client) window.removeEventListener('scroll', handleScroll)\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n@media (max-width: 991px) {\r\n  .custom-offcanvas {\r\n    width: 50%;\r\n  }\r\n}\r\n</style>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAmDA,UAAM,SAAS,IAAI;AAAA,MACjB,SAAS;AAAA,MACT,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,UAAU,CAAA;AAAA,IAAC,CACZ;AAEK,UAAA,aAAa,IAAI,KAAK;AAC5B,UAAM,QAAQ,SAAS;AAkCvB,aAAS,UAAU,MAAM;;AACnB,UAAA,KAAK,WAAW,GAAG,GAAG;AAClB,cAAA,SAAkB,SAAA,cAAc,IAAI;AAC1C,YAAI,QAAQ;AACV,gBAAM,SAAS;AACf,gBAAM,MAAM,OAAO,sBAAA,EAAwB,eAAa,UAAU;AAClE,UAAA,SAAO,SAAS,EAAE,KAAK,UAAU,UAAU;AAAA,QAAA;AAAA,MAC7C,OACK;AACL,mBAAW,IAAI;AAAA,MAAA;AAGX,YAAA,YAAqB,SAAA,eAAe,iBAAiB;AAC3D,UAAI,uCAAW,UAAU,SAAS,SAAS;AACzC,wBAAU,UAAU,YAAY,SAAS,MAAzC,mBAA4C;AAAA,MAAK;AAAA,IACnD;AAGF,aAAS,SAAS,MAAM;AACf,aAAA,MAAM,SAAS,QAAS,KAAK,WAAW,GAAG,KAAK,MAAM,SAAS;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}