{"file":"HeaderTop.vue.mjs","mappings":";;;;;;;AAmCA,UAAM,cAAc,IAAI,EAAE;AAC1B,UAAM,cAAc,IAAI,EAAE;AAC1B,UAAM,gBAAgB,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../../components/pageHeader/HeaderTop.vue"],"sourcesContent":["<template>\r\n  <div id=\"headerTop\" class=\"header-top\">\r\n    <div class=\"container\">\r\n      <div class=\"header-top-wrapper d-flex justify-content-between align-items-center\">\r\n        <!-- Contact Information -->\r\n         <div class=\"header-top-contact\">\r\n        <ul class=\"list-unstyled d-flex gap-3 mb-0\" v-if=\"contactInfo.length\">\r\n          <li v-for=\"(contact, index) in contactInfo\" :key=\"index\">\r\n            <a :href=\"contact.link\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i :class=\"contact.icon\" class=\"me-1\"></i> {{ contact.text }}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n        <!-- Social Media Links -->\r\n        <div class=\"header-top-social d-flex align-items-center gap-2\" v-if=\"socialLinks.length\">\r\n          <span v-if=\"followUsLabel\">{{ followUsLabel }}</span>\r\n          <a\r\n            v-for=\"(social, index) in socialLinks\"\r\n            :key=\"index\"\r\n            :href=\"social.link\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <i :class=\"social.icon\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\n\r\nconst contactInfo = ref([])\r\nconst socialLinks = ref([])\r\nconst followUsLabel = ref('')\r\n\r\n// Utility to parse key-value pairs from .txt\r\nconst parseKeyValueTxt = (text) =>\r\n  Object.fromEntries(\r\n    text\r\n      .split('\\n')\r\n      .map(line => line.trim())\r\n      .filter(line => line && !line.startsWith('#') && line.includes('='))\r\n      .map(line => {\r\n        const [key, ...rest] = line.split('=')\r\n        return [key.trim(), rest.join('=').trim()]\r\n      })\r\n  )\r\n\r\nconst loadHeaderData = async () => {\r\n  try {\r\n    const res = await fetch('/data/topHeader.txt')\r\n    const text = await res.text()\r\n    const map = parseKeyValueTxt(text)\r\n\r\n    // Dynamically build contact info (detect keys starting with headerContact)\r\n    contactInfo.value = Object.entries(map)\r\n      .filter(([key]) => key.startsWith('headerContact') && key.endsWith('Text'))\r\n      .map(([key, text]) => {\r\n        const prefix = key.replace('Text', '')\r\n        return {\r\n          text,\r\n          link: map[`${prefix}Link`] || '#',\r\n          icon: map[`${prefix}Icon`] || 'fa-solid fa-circle-info'\r\n        }\r\n      })\r\n\r\n    // Dynamically build social links (detect keys starting with headerSocial)\r\n    socialLinks.value = Object.entries(map)\r\n      .filter(([key]) => key.startsWith('headerSocial') && key.endsWith('Link'))\r\n      .map(([key, link]) => {\r\n        const prefix = key.replace('Link', '')\r\n        return {\r\n          link,\r\n          icon: map[`${prefix}Icon`] || 'fa-brands fa-linkedin'\r\n        }\r\n      })\r\n\r\n    followUsLabel.value = map.headerFollowUsLabel || ''\r\n\r\n  } catch (err) {\r\n    console.error('Failed to load topHeader.txt:', err)\r\n  }\r\n}\r\n\r\nonMounted(loadHeaderData)\r\n</script>\r\n\r\n<style scoped>\r\n@media (max-width: 767px) {\r\n  .header-top-wrapper {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 10px;\r\n  }\r\n}\r\n</style>\r\n"],"version":3}