{"file":"index-CneRGJcp.js","mappings":";;;;;;;;;;;;;;;;;;;;AAuGA,UAAM,SAAS,IAAI,EAAE;AACrB,UAAM,UAAU,IAAI,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EtB,UAAM,WAAW;AAAA,MACf;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAY;AAAA,QACZ,WAAW;AAAA,QACX,OAAO;AAAA,MACR;AAAA,MACD;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAY;AAAA,QACZ,WAAW;AAAA,QACX,OAAO;AAAA,MACR;AAAA,MACD;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAY;AAAA,QACZ,WAAW;AAAA,QACX,OAAO;AAAA,MACR;AAAA,MACD;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAY;AAAA,QACZ,WAAW;AAAA,QACX,OAAO;AAAA,MACR;AAAA,IACL;;;;;;;;;;;;;;;;;;;;ACQA,UAAM,QAAQ,SAAS;AAAA,MACrB,OAAO;AAAA,MACP,UAAU;AAAA,MACV,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,SAAS;AAAA,MACT,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,aAAa;AAAA,MACb,cAAc;AAAA,MACd,UAAU,CAAE;AAAA,MACZ,QAAQ,CAAE;AAAA,MACV,KAAK;AAAA,QACH,MAAM;AAAA,QACN,MAAM;AAAA,MACP;AAAA,IACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BD,UAAM,cAAc,IAAI;AAAA,MACtB,SAAS;AAAA,MACT,OAAO;AAAA,MACP,aAAa;AAAA,MACb,OAAO;AAAA,IACT,CAAC;AAED,UAAM,aAAa,IAAI;AAAA,MACrB,SAAS;AAAA,MACT,OAAO;AAAA,MACP,aAAa;AAAA,IACf,CAAC;AAED,UAAM,gBAAgB,IAAI;AAAA,MACxB,OAAO;AAAA,IACT,CAAC;AAED,UAAM,WAAW,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;ACvCvB,UAAM,eAAe,SAAS;AAAA,MAC5B,OAAO;AAAA,MACP,UAAU;AAAA,MACV,SAAS;AAAA,MACT,wBAAwB;AAAA,MACxB,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,aAAa;AAAA,MACb,QAAQ,CAAE;AAAA,IACZ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACrBD,UAAM,WAAW,SAAS,EAAE;AACJ,QAAI,EAAE;;;;;;;;;;;;;;;;;;;;;ACoB9B,UAAM,cAAc,IAAI,CAAA,CAAE;AAC1B,UAAM,cAAc,IAAI,CAAA,CAAE;;;;;;;;;;;;;;;;;;;;;;;;ACvB1B,UAAM,YAAY,IAAI;AAAA,MACpB,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ,CAAC;;;;;;;;;;;;;;;;ACTD,UAAM,WAAW,IAAI,CAAA,CAAE;AA8BvB,UAAM,mBAAmB,SAAS,MAAM;AAAA,MACtC,GAAG,SAAS;AAAA,MACZ,GAAG,SAAS;AAAA,MACZ,GAAG,SAAS;AAAA,IACd,CAAC;;;;;;;;;;;;;;;;;;;;;ACdK,UAAA,EAAE,QAAQ,IAAI,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../components/homePage/CarouselSlide.vue","../../../../components/homePage/AboutServices.vue","../../../../components/homePage/AboutArea.vue","../../../../components/homePage/OurVision.vue","../../../../components/homePage/SafetyPolicy.vue","../../../../components/homePage/CounterSection.vue","../../../../components/homePage/TeamArea.vue","../../../../components/homePage/VideoArea.vue","../../../../components/homePage/PartnerArea.vue","../../../../pages/index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Carousel -->\r\n    <div\r\n      v-if=\"!loading && slides.length > 0\"\r\n      id=\"DynamicCarousel\"\r\n      class=\"carousel slide\"\r\n      data-bs-ride=\"carousel\"\r\n      data-bs-interval=\"5000\"\r\n      data-bs-pause=\"hover\"\r\n    >\r\n      <!-- Indicators -->\r\n      <div class=\"carousel-indicators\" v-if=\"slides.length > 1\">\r\n        <button\r\n          v-for=\"(slide, index) in slides\"\r\n          :key=\"index\"\r\n          type=\"button\"\r\n          data-bs-target=\"#DynamicCarousel\"\r\n          :data-bs-slide-to=\"index\"\r\n          :class=\"{ active: index === 0 }\"\r\n          :aria-current=\"index === 0 ? 'true' : null\"\r\n          :aria-label=\"`Slide ${index + 1}`\"\r\n        ></button>\r\n      </div>\r\n\r\n      <!-- Slides -->\r\n      <div class=\"carousel-inner\">\r\n        <div\r\n          v-for=\"(slide, index) in slides\"\r\n          :key=\"index\"\r\n          :class=\"['carousel-item', { active: index === 0 }]\"\r\n        >\r\n          <div\r\n            class=\"slide-item d-flex align-items-center\"\r\n            :style=\"{ backgroundImage: `url(${slide.image || '/img/default-image.png'})` }\"\r\n          >\r\n            <div class=\"overlay\"></div>\r\n            <div class=\"container\">\r\n              <div class=\"row align-items-center\">\r\n                <div class=\"col-12 col-lg-10 text-center text-lg-start\">\r\n                  <div class=\"slider-content\">\r\n                    <h6 class=\"slide-sub-title mb-2\">{{ slide.subtitle || 'Default Subtitle' }}</h6>\r\n                    <h1 class=\"slide-title\">\r\n                      {{ slide.title || 'Default Title' }}\r\n                      <span>{{ slide.headingHighlight || '' }}</span>\r\n                      {{ slide.headingAfter || '' }}\r\n                    </h1>\r\n                    <p class=\"lead\">{{ slide.description || 'Default Description' }}</p>\r\n                    <div class=\"slide-btn mt-3\">\r\n                      <a\r\n                        :href=\"slide.buttonLink || '#'\"\r\n                        class=\"btn btn-warning btn-lg me-2 theme-btn\"\r\n                      >\r\n                        About More <i class=\"fas fa-arrow-right-long\"></i>\r\n                      </a>\r\n                      <a\r\n                        :href=\"slide.secondaryButtonLink || '#'\"\r\n                        class=\"btn btn-outline-light btn-lg theme-btn theme-btn-outline\"\r\n                      >\r\n                        Learn More <i class=\"fas fa-arrow-right-long\"></i>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Controls -->\r\n      <button\r\n        v-if=\"slides.length > 1\"\r\n        class=\"carousel-control-prev\"\r\n        type=\"button\"\r\n        data-bs-target=\"#DynamicCarousel\"\r\n        data-bs-slide=\"prev\"\r\n      >\r\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n        <span class=\"visually-hidden\">Previous</span>\r\n      </button>\r\n      <button\r\n        v-if=\"slides.length > 1\"\r\n        class=\"carousel-control-next\"\r\n        type=\"button\"\r\n        data-bs-target=\"#DynamicCarousel\"\r\n        data-bs-slide=\"next\"\r\n      >\r\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n        <span class=\"visually-hidden\">Next</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Loading State -->\r\n    <div v-if=\"loading\" class=\"loading-state\">\r\n      <p>Loading...</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\n\r\nconst slides = ref([])\r\nconst loading = ref(true)\r\n\r\nconst parseSlidesFromText = (text) => {\r\n  const blocks = text.split('[slide]').filter(Boolean)\r\n  return blocks.map(block => {\r\n    const data = {}\r\n    block.trim().split('\\n').forEach(line => {\r\n      const [key, ...rest] = line.split('=')\r\n      if (key && rest.length) {\r\n        data[key.trim()] = rest.join('=').trim()\r\n      }\r\n    })\r\n    return data\r\n  })\r\n}\r\n\r\nonMounted(async () => {\r\n  try {\r\n    const res = await fetch('/data/content.txt')\r\n    if (!res.ok) throw new Error(`Failed to load content`)\r\n    const text = await res.text()\r\n    slides.value = parseSlidesFromText(text)\r\n  } catch (err) {\r\n    console.error(err)\r\n    slides.value = [] // fallback to empty if needed\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n})\r\n</script>\r\n\r\n\r\n<style scoped> \r\n.carousel-control-prev,\r\n.carousel-control-next {\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    background-color: var(--theme-color);\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    height: 55px;\r\n    width: 55px;\r\n    border-radius: 50%;\r\n    z-index: 10;\r\n    opacity: .6;\r\n}\r\n/* Position left arrow */\r\n.carousel-control-prev {\r\n    left: 2rem; \r\n}\r\n/* Position right arrow */\r\n.carousel-control-next {\r\n    right: 2rem; \r\n}\r\n.carousel-control-prev:hover,\r\n.carousel-control-next:hover{\r\n  opacity: 1;\r\n}\r\n.slider-content .slide-btn{\r\n  display: none;\r\n}\r\n.text-warning{\r\n  color: var(--theme-color)!important;\r\n}\r\n</style>\r\n","<template> \r\n  <section class=\"feature-area py-120 pt-3\">\r\n    <div class=\"container\">\r\n      <div class=\"feature-wrapper\">\r\n        <div class=\"row g-4\">\r\n          <div\r\n              v-for=\"(item, index) in features\"\r\n              :key=\"index\"\r\n              class=\"col-12 col-sm-6 col-lg-3 d-flex\"\r\n            >\r\n              <div\r\n                class=\"feature-item wow w-100\"\r\n                :class=\"item.animation\"\r\n                :data-wow-delay=\"item.delay\"\r\n              >\r\n                <span class=\"count\">{{ item.count }}</span>\r\n                <div class=\"feature-icon mb-3\">\r\n                  <i :class=\"item.icon\"></i>\r\n                </div>\r\n                <h4 class=\"feature-title mb-2\">{{ item.title }}</h4>\r\n                <p class=\"mb-0\">{{ item.description }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </template>\r\n  \r\n  <script setup>\r\n  const features = [\r\n    {\r\n      count: '01',\r\n      icon: 'flaticon-labor-man',\r\n      title: 'Expert Engineers',\r\n      description:'It is a long established fact that a reader will be distracted by the readable content of the page looking layout point.',\r\n      animation: 'fadeInUp',\r\n      delay: '.25s',\r\n    },\r\n    {\r\n      count: '02',\r\n      icon: 'flaticon-forklift',\r\n      title: 'Modern Equipment',\r\n      description:'It is a long established fact that a reader will be distracted by the readable content of the page looking layout point.',\r\n      animation: 'fadeInDown',\r\n      delay: '.25s',\r\n    },\r\n    {\r\n      count: '03',\r\n      icon: 'flaticon-factory',\r\n      title: 'We Quality Industrial',\r\n      description:'It is a long established fact that a reader will be distracted by the readable content of the page looking layout point.',\r\n      animation: 'fadeInUp',\r\n      delay: '.25s',\r\n    },\r\n    {\r\n      count: '04',\r\n      icon: 'flaticon-mechanical-arm',\r\n      title: 'Best Manufacturing',\r\n      description:'It is a long established fact that a reader will be distracted by the readable content of the page looking layout point.',\r\n      animation: 'fadeInDown',\r\n      delay: '.25s',\r\n    },\r\n  ];\r\n  </script>\r\n  ","<template>\r\n  <section id=\"about\" class=\"about-area py-120 pb-5\">\r\n    <div class=\"container\">\r\n      <div class=\"row align-items-center gy-5\">\r\n        <!-- Left Column -->\r\n        <div class=\"col-lg-6\">\r\n          <div class=\"about-left fadeInLeft\">\r\n            <div class=\"about-img mb-4 mb-lg-0\">\r\n              <img :src=\"about.image\" :alt=\"about.imageAlt\" class=\"img-fluid rounded-0\" />\r\n            </div>\r\n            <div class=\"about-experience d-flex align-items-center\">\r\n              <div class=\"about-experience-icon me-3\">\r\n                <i :class=\"about.experienceIcon\"></i>\r\n              </div>\r\n              <strong class=\"text-start\">\r\n                {{ about.experienceYears }} Years Of <br />\r\n                {{ about.experienceText }}\r\n              </strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Right Column -->\r\n        <div class=\"col-lg-6\">\r\n          <div class=\"about-right fadeInRight\">\r\n            <div class=\"site-heading mb-3\">\r\n              <span class=\"site-title-tagline\">{{ about.tagline }}</span>\r\n              <h2 class=\"site-title\">\r\n                {{ about.headingBefore }}\r\n                <span>{{ about.headingHighlight }}</span>\r\n                {{ about.headingAfter }}\r\n              </h2>\r\n            </div>\r\n            <p class=\"about-text mb-4\">{{ about.description }}</p>\r\n            <p class=\"about-text mb-4\">{{ about.description2 }}</p>\r\n            <!-- Features -->\r\n            <div class=\"about-content mb-4\">\r\n              <div class=\"row g-3\">\r\n                <div class=\"col-md-6\" v-for=\"(feature, index) in about.features\" :key=\"`feature-${index}`\">\r\n                  <div class=\"about-item d-flex\">\r\n                    <div class=\"about-item-icon me-3\">\r\n                      <i :class=\"feature.icon\"></i>\r\n                    </div>\r\n                    <div class=\"about-item-content\">\r\n                      <h5 class=\"mb-1\">{{ feature.title }}</h5>\r\n                      <p class=\"mb-0\">{{ feature.text }}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Points -->\r\n            <ul class=\"about-list list-unstyled mb-4\">\r\n              <li v-for=\"(point, index) in about.points\" :key=\"`point-${index}`\">\r\n                <i :class=\"[point.icon, 'me-2', 'txt-warning']\"></i>{{ point.text }}\r\n              </li>\r\n            </ul>\r\n \r\n            <a :href=\"about.cta.link\" class=\"theme-btn mt-3\">\r\n              {{ about.cta.text }} <i class=\"fas fa-arrow-right-long\"></i>\r\n            </a>  \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, onMounted } from 'vue'\r\n\r\nconst about = reactive({\r\n  image: '',\r\n  imageAlt: '',\r\n  experienceYears: 0,\r\n  experienceText: '',\r\n  experienceIcon: '',\r\n  tagline: '',\r\n  headingBefore: '',\r\n  headingHighlight: '',\r\n  headingAfter: '',\r\n  description: '',\r\n  description2: '',\r\n  features: [],\r\n  points: [],\r\n  cta: {\r\n    text: '',\r\n    link: '',\r\n  },\r\n})\r\n\r\nconst parseTextFile = (data) => {\r\n  const parsedData = {}\r\n  const lines = data.split('\\n')\r\n\r\n  lines.forEach((line) => {\r\n    const [key, value] = line.split('=')\r\n    if (key && value) {\r\n      const keys = key.split('.')\r\n      if (keys.length === 1) {\r\n        parsedData[key] = value.trim()\r\n      } else if (keys.length === 2) {\r\n        parsedData[keys[0]] = parsedData[keys[0]] || {}\r\n        parsedData[keys[0]][keys[1]] = value.trim()\r\n      }\r\n    }\r\n  })\r\n\r\n  // Map features and points to objects instead of arrays\r\n  parsedData.features = []\r\n  parsedData.points = []\r\n\r\n  for (let i = 1; parsedData[`feature${i}`]; i++) {\r\n    parsedData.features.push({\r\n      icon: parsedData[`feature${i}`].icon,\r\n      title: parsedData[`feature${i}`].title,\r\n      text: parsedData[`feature${i}`].text,\r\n    })\r\n    delete parsedData[`feature${i}`]\r\n  }\r\n\r\n  for (let i = 1; parsedData[`point${i}`]; i++) {\r\n    parsedData.points.push({\r\n      text: parsedData[`point${i}`].text,\r\n      icon: parsedData[`point${i}`].icon,\r\n    })\r\n    delete parsedData[`point${i}`]\r\n  }\r\n\r\n  return parsedData\r\n}\r\n\r\nonMounted(async () => {\r\n  const response = await fetch('/data/about.txt')\r\n  const textData = await response.text()\r\n  const parsedData = parseTextFile(textData)\r\n\r\n  Object.assign(about, parsedData)\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.about-content,\r\nul.about-list.list-unstyled.mb-4 {\r\n    display: none;\r\n}\r\n</style>\r\n","<template>\r\n  <section id=\"missionVision\" class=\"choose-area bg py-120\">\r\n    <div class=\"container\">\r\n      <div class=\"row align-items-center\">\r\n        <!-- Content Column -->\r\n        <div class=\"col-lg-6\">\r\n          <div class=\"choose-content choose fadeInUp\">\r\n            <div class=\"site-heading mb-3\">\r\n              <span class=\"site-title-tagline\">{{ sectionData.tagline }}</span>\r\n              <h2 class=\"site-title\">{{ sectionData.title }}</h2>\r\n            </div>\r\n            <p>{{ sectionData.description }}</p>\r\n\r\n            <div class=\"site-heading mb-3\">\r\n              <span class=\"site-title-tagline\">{{ visionData.tagline }}</span>\r\n              <h2 class=\"site-title\">{{ visionData.title }}</h2>\r\n            </div>\r\n            <p>{{ visionData.description }}</p>\r\n\r\n            <div class=\"site-heading mb-3\">\r\n              <h2 class=\"site-title\">{{ whatWeDoTitle.title }}</h2>\r\n            </div>\r\n\r\n            <div class=\"choose-wrapper\">\r\n              <div\r\n                class=\"choose-item\"\r\n                v-for=\"(item, index) in whatWeDo\"\r\n                :key=\"index\"\r\n              >\r\n                <div class=\"choose-icon\">\r\n                  <i :class=\"item.icon\"></i>\r\n                </div>\r\n                <div class=\"choose-item-content\">\r\n                  <h4>{{ item.title }}</h4>\r\n                  <p>{{ item.text }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <a href=\"/aboutUs/about\" class=\"theme-btn mt-3\">\r\n              Discover More <i class=\"fas fa-arrow-right-long\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Image Column -->\r\n        <div class=\"col-lg-6\">\r\n          <div class=\"choose-img choose fadeInRight\">\r\n            <img\r\n              :src=\"sectionData.image\"\r\n              alt=\"choose image\"\r\n              class=\"img-fluid w-100 min-height\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\n\r\nconst sectionData = ref({\r\n  tagline: '',\r\n  title: '',\r\n  description: '',\r\n  image: '',\r\n})\r\n\r\nconst visionData = ref({\r\n  tagline: '',\r\n  title: '',\r\n  description: '',\r\n})\r\n\r\nconst whatWeDoTitle = ref({\r\n  title: '',\r\n})\r\n\r\nconst whatWeDo = ref([])\r\n\r\nconst parseContentText = (text) => {\r\n  const lines = text.split('\\n').filter(Boolean)\r\n  const data = {}\r\n  const tasks = []\r\n\r\n  lines.forEach(line => {\r\n    const idx = line.indexOf('=')\r\n    if (idx === -1) return\r\n\r\n    const key = line.slice(0, idx).trim()\r\n    const value = line.slice(idx + 1).trim()\r\n\r\n    if (key.startsWith('whatwedo')) {\r\n      const match = key.match(/^whatwedo(\\d+)\\.(.+)$/)\r\n      if (match) {\r\n        const index = parseInt(match[1], 10)\r\n        const field = match[2]\r\n        if (!tasks[index]) tasks[index] = {}\r\n        tasks[index][field] = value\r\n      }\r\n    } else {\r\n      const [section, field] = key.split('.')\r\n      if (!data[section]) data[section] = {}\r\n      data[section][field] = value\r\n    }\r\n  })\r\n\r\n  return {\r\n    sectionData: data.section || {},\r\n    visionData: data.vision || {},\r\n    whatWeDoTitle: data.whatwedotitle || {},\r\n    whatWeDo: tasks.filter(Boolean), // filter undefined gaps\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  try {\r\n    const res = await fetch('/data/missionVision.txt')\r\n    if (!res.ok) throw new Error('Failed to fetch content.txt')\r\n    const text = await res.text()\r\n    const parsed = parseContentText(text)\r\n\r\n    sectionData.value = parsed.sectionData\r\n    visionData.value = parsed.visionData\r\n    whatWeDoTitle.value = parsed.whatWeDoTitle\r\n    whatWeDo.value = parsed.whatWeDo\r\n  } catch (err) {\r\n    console.error('Error loading content:', err)\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.min-height {\r\n  min-height: 70rem;\r\n}\r\n</style>\r\n","<template>\r\n  <section id=\"SafetyPolicy\" class=\"safety-policy py-120\">\r\n    <div class=\"container\">\r\n      <div class=\"row align-items-center gy-5\">\r\n        <!-- Left Column -->\r\n        <div class=\"col-lg-6\">\r\n          <div class=\"safety-policy-left fadeInLeft\">\r\n            <div class=\"safety-policy-itemimg mb-4 mb-lg-0\">\r\n              <img :src=\"safetyPolicy.image\" :alt=\"safetyPolicy.imageAlt\" class=\"img-fluid rounded-0\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Right Column -->\r\n        <div class=\"col-lg-6\">\r\n          <div class=\"safety-policy-right fadeInRight\">\r\n            <div class=\"site-heading mb-3\">\r\n              <span class=\"site-title-tagline\">{{ safetyPolicy.tagline }}</span>\r\n              <h2 class=\"site-title\">\r\n                <span>{{ safetyPolicy.highlightHeadingBefore }}&nbsp;</span>{{ safetyPolicy.headingBefore }}\r\n                <span>{{ safetyPolicy.headingHighlight }}</span>\r\n                {{ safetyPolicy.headingAfter }}\r\n              </h2>\r\n            </div>\r\n            <p class=\"mb-4\">{{ safetyPolicy.description }}</p>\r\n            <!-- Points -->\r\n            <ul class=\"safety-policy-list list-unstyled mb-4\">\r\n              <li v-for=\"(point, index) in safetyPolicy.points\" :key=\"index\">\r\n                <i :class=\"[point.icon, 'me-2', 'txt-warning']\"></i>{{ point.text }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { reactive, onMounted } from 'vue'\r\n\r\nconst safetyPolicy = reactive({\r\n  image: '',\r\n  imageAlt: '',\r\n  tagline: '',\r\n  highlightHeadingBefore: '',\r\n  headingBefore: '',\r\n  headingHighlight: '',\r\n  headingAfter: '',\r\n  description: '',\r\n  points: []\r\n})\r\n\r\nasync function loadSafetyPolicyData() {\r\n  const res = await fetch('/data/safetyPolicy.txt')\r\n  const txt = await res.text()\r\n\r\n  const lines = txt.split('\\n').filter(line => line.trim() !== '' && !line.startsWith('#'))\r\n\r\n  const points = []\r\n  for (const line of lines) {\r\n    const [key, ...rest] = line.split('=')\r\n    const value = rest.join('=').trim()\r\n    if (!key.startsWith('safetyPolicy.')) continue\r\n\r\n    const path = key.trim().split('.')\r\n    if (path[1]?.startsWith('point')) {\r\n      const index = parseInt(path[1].replace('point', '')) - 1\r\n      if (!points[index]) points[index] = {}\r\n      points[index][path[2]] = value\r\n    } else {\r\n      safetyPolicy[path[1]] = value\r\n    }\r\n  }\r\n\r\n  safetyPolicy.points = points.filter(p => p.text)\r\n}\r\n\r\nonMounted(loadSafetyPolicyData)\r\n</script>\r\n<style scoped>\r\n  /* Your styles remain unchanged except note about unused class */\r\n  \r\n  .safety-policy-left {\r\n    position: relative;\r\n    z-index: 1;\r\n  }\r\n  .safety-policy-left::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: -20px;\r\n    left: -20px;\r\n    width: 250px;\r\n    height: 250px;\r\n    background: var(--theme-color);\r\n    clip-path: polygon(0 0, 0% 100%, 100% 100%);\r\n    z-index: -1;\r\n  }\r\n  .safety-policy-left::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: -20px;\r\n    right: -20px;\r\n    width: 250px;\r\n    height: 250px;\r\n    background: var(--theme-color);\r\n    clip-path: polygon(100% 0, 0% 0%, 100% 100%);\r\n    z-index: -1;\r\n  }\r\n  .safety-policy-left img {\r\n    width: 100%;\r\n  }\r\n  .safety-policy-right {\r\n    position: relative;\r\n    display: block;\r\n    padding-left: 30px;\r\n  }\r\n  .safety-policy-right:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 8px;\r\n    left: 0px;\r\n    width: 25px;\r\n    height: 92%;\r\n    border-right: 5px solid var(--theme-color);\r\n    z-index: -1;\r\n  }\r\n  .safety-policy-list li {\r\n    position: relative;\r\n    padding-left: 1.5rem;\r\n    margin-top: 10px;\r\n  }\r\n  @media all and (max-width: 991px) {\r\n    .safety-policy-right {\r\n      margin-top: 70px;\r\n    }\r\n  }\r\n  </style>\r\n  ","<template>\r\n  <section class=\"counter-area py-120\">\r\n    <div class=\"container\">\r\n      <div class=\"row g-4\">\r\n        <div\r\n          v-for=\"(counter, index) in counters\"\r\n          :key=\"`counter-${index}`\"\r\n          class=\"col-6 col-lg-3\"\r\n        >\r\n          <div\r\n            class=\"counter-box text-center p-3 h-100\"\r\n            ref=\"counterElements\"\r\n          >\r\n            <div class=\"icon\">\r\n              <i :class=\"counter.iconClass\"></i>\r\n            </div>\r\n            <div>\r\n              <span class=\"counter\">{{ counter.current }}</span>\r\n              <h6 class=\"title\">{{ counter.title }}</h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, nextTick } from 'vue'\r\n\r\nconst counters = reactive([])\r\nconst counterElements = ref([])\r\n\r\nasync function loadCounterData() {\r\n  try {\r\n    const res = await fetch('/data/counterSection.txt')\r\n    const text = await res.text()\r\n\r\n    const entries = text.trim().split(/\\n\\s*\\n/)\r\n    entries.forEach((block) => {\r\n      const entry = { current: 0 }\r\n      block.split('\\n').forEach(line => {\r\n        const [key, value] = line.split('=')\r\n        const k = key?.trim()\r\n        const v = value?.trim()\r\n        if (!k || !v) return\r\n        entry[k] = ['to', 'speed'].includes(k) ? Number(v) : v\r\n      })\r\n      counters.push(entry)\r\n    })\r\n  } catch (err) {\r\n    console.error('Failed to load counters:', err)\r\n  }\r\n}\r\n\r\nfunction startCounting(index) {\r\n  const counter = counters[index]\r\n  const { to, speed } = counter\r\n  const startTime = performance.now()\r\n\r\n  const tick = now => {\r\n    const progress = Math.min((now - startTime) / speed, 1)\r\n    counter.current = Math.floor(progress * to)\r\n    if (progress < 1) requestAnimationFrame(tick)\r\n  }\r\n\r\n  requestAnimationFrame(tick)\r\n}\r\n\r\nonMounted(async () => {\r\n  await loadCounterData()\r\n  await nextTick()\r\n\r\n  // Initialize the counterElements ref\r\n  counterElements.value.forEach((el, idx) => {\r\n    if (el) {\r\n      const observer = new IntersectionObserver(\r\n        ([entry], obs) => {\r\n          if (entry.isIntersecting) {\r\n            startCounting(idx)\r\n            obs.unobserve(entry.target)\r\n          }\r\n        },\r\n        { threshold: 0.5 }\r\n      )\r\n      observer.observe(el)\r\n    }\r\n  })\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n/* Optional scoped styles */\r\n</style>\r\n","<template>\r\n  <section class=\"team-area 65rem bg pt-120 pb-50\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-6 mx-auto\">\r\n          <div class=\"site-heading text-center\">\r\n            <span class=\"site-title-tagline\">{{ sectionData.tagline }}</span>\r\n            <h2 class=\"site-title\">\r\n              {{ sectionData.titleBefore }} <span>{{ sectionData.titleHighlight }}</span>\r\n            </h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row mt-5\">\r\n        <div\r\n          class=\"col-md-6 col-lg-3\"\r\n          v-for=\"(member, index) in teamMembers\"\r\n          :key=\"index\"\r\n        >\r\n          <div class=\"team-item wow fadeInUp\" :data-wow-delay=\"member.delay\">\r\n            <div class=\"team-img\">\r\n              <img :src=\"member.image\" :alt=\"member.name\" />\r\n            </div>\r\n            <div class=\"team-social\">\r\n              <a\r\n                v-for=\"(social, i) in member.socials\"\r\n                :key=\"i\"\r\n                :href=\"`https://${social.platform}.com`\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <i :class=\"social.iconClass\"></i>\r\n              </a>\r\n            </div>\r\n            <div class=\"team-content\">\r\n              <div class=\"team-bio\">\r\n                <h5><a href=\"#\">{{ member.name }}</a></h5>\r\n                <span>{{ member.position }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\n\r\nconst sectionData = ref({});\r\nconst teamMembers = ref([]);\r\n\r\nconst loadContent = async () => {\r\n  const response = await fetch('data/teamArea.txt');\r\n  const text = await response.text();\r\n\r\n  const lines = text\r\n    .split('\\n')\r\n    .map(line => line.trim())\r\n    .filter(line => line && !line.startsWith('#'));\r\n\r\n  const getValue = (lines, key) =>\r\n    lines.find(line => line.startsWith(`${key}=`))?.split('=')[1]?.trim();\r\n\r\n  sectionData.value = {\r\n    tagline: getValue(lines, 'tagline'),\r\n    titleBefore: getValue(lines, 'titleBefore'),\r\n    titleHighlight: getValue(lines, 'titleHighlight'),\r\n  };\r\n\r\n  // Group all member lines\r\n  const memberLines = lines.filter(line => line.startsWith('member_'));\r\n\r\n  // Extract unique member IDs\r\n  const memberIds = [...new Set(\r\n    memberLines\r\n      .map(line => line.match(/^member_(\\d+)_/)?.[1])\r\n      .filter(Boolean)\r\n  )];\r\n\r\n  teamMembers.value = memberIds.map(id => {\r\n    const socialsRaw = getValue(lines, `member_${id}_socials`);\r\n    const socials = socialsRaw\r\n      ? socialsRaw.split(',').map(entry => {\r\n          const [platform, iconClass] = entry.trim().split(':');\r\n          return { platform, iconClass };\r\n        })\r\n      : [];\r\n\r\n    return {\r\n      name: getValue(lines, `member_${id}_name`),\r\n      position: getValue(lines, `member_${id}_position`),\r\n      image: getValue(lines, `member_${id}_image`),\r\n      delay: getValue(lines, `member_${id}_delay`),\r\n      socials,\r\n    };\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  loadContent();\r\n});\r\n</script>\r\n","<template> \r\n  <section class=\"video-area\">\r\n    <div class=\"container-fluid px-0\">\r\n      <div\r\n        class=\"video-content d-flex justify-content-center align-items-center\"\r\n        :style=\"videoData.background ? `background-image: url(${videoData.background})` : ''\"\r\n      >\r\n        <div class=\"row w-100\">\r\n          <div class=\"col-12 d-flex justify-content-center\">\r\n            <div class=\"video-wrapper\">\r\n              <a\r\n                class=\"play-btn popup-youtube\"\r\n                :href=\"videoData.videoUrl\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <i class=\"fas fa-play\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\n\r\nconst videoData = ref({\r\n  background: '',\r\n  videoUrl: ''\r\n});\r\n\r\nconst loadVideoData = async () => {\r\n  try {\r\n    const response = await fetch('/data/VideoArea.txt');\r\n    const text = await response.text();\r\n\r\n    const lines = text.split('\\n').filter(line => line.trim() && !line.startsWith('#'));\r\n\r\n    lines.forEach(line => {\r\n      const separatorIndex = line.indexOf('=');\r\n      if (separatorIndex > -1) {\r\n        const key = line.slice(0, separatorIndex).trim();\r\n        const value = line.slice(separatorIndex + 1).trim();\r\n\r\n        if (key === 'background' || key === 'videoUrl') {\r\n          videoData.value[key] = value;\r\n        }\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Failed to load video data:', error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  loadVideoData();\r\n});\r\n</script>\r\n","<template>\r\n  <section class=\"partner-area bg py-120\">\r\n    <div class=\"container\">\r\n      <div class=\"marquee-wrapper overflow-hidden position-relative\">\r\n        <div class=\"marquee-track\">\r\n          <div class=\"marquee d-flex align-items-center gap-4\">\r\n            <div\r\n              v-for=\"(logo, index) in repeatedPartners\"\r\n              :key=\"index\"\r\n              class=\"partner-logo\"\r\n            >\r\n              <img :src=\"logo.src\" :alt=\"logo.alt\" class=\"img-fluid\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\n\r\nconst partners = ref([]);\r\n\r\nconst loadPartnerData = async () => {\r\n  try {\r\n    const response = await fetch('/data/partners.txt');\r\n    const text = await response.text();\r\n\r\n    const lines = text\r\n      .split('\\n')\r\n      .map(line => line.trim())\r\n      .filter(line => line && !line.startsWith('#'));\r\n\r\n    partners.value = lines.map(line => {\r\n      const attributes = line.split(';').reduce((acc, part) => {\r\n        const [key, val] = part.split('=');\r\n        if (key && val) acc[key.trim()] = val.trim();\r\n        return acc;\r\n      }, {});\r\n      return { src: attributes.src || '', alt: attributes.alt || '' };\r\n    });\r\n  } catch (error) {\r\n    console.error('Failed to load partner logos:', error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  loadPartnerData();\r\n});\r\n\r\n// Repeat logos to enable smooth looping marquee\r\nconst repeatedPartners = computed(() => [\r\n  ...partners.value,\r\n  ...partners.value,\r\n  ...partners.value\r\n]);\r\n</script>\r\n\r\n<style scoped>\r\n.marquee-wrapper {\r\n  height: 100px;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.marquee-track {\r\n  width: 100%;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n}\r\n\r\n.marquee {\r\n  display: flex;\r\n  animation: scroll-marquee 30s linear infinite;\r\n}\r\n\r\n.partner-logo {\r\n  flex: 0 0 auto;\r\n  padding-right: 2rem;\r\n}\r\n\r\n@keyframes scroll-marquee {\r\n  0% {\r\n    transform: translateX(0%);\r\n  }\r\n  100% {\r\n    transform: translateX(-33.333%);\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div>     \r\n    <PageLoader :show=\"loading\" />\r\n    <div v-show=\"!loading\">\r\n      <Header />\r\n      <CarouselSlide />\r\n      <AboutArea />\r\n      <AboutServices />\r\n      <OurVision />\r\n      <SafetyPolicy />\r\n      <CounterSection />\r\n      <TeamArea />\r\n      <VideoArea />\r\n      <PartnerArea />\r\n      <Footer />\r\n    <!-- \r\n    <ServiceArea /> \r\n    <PortfolioArea/>\r\n   <ChooseArea/>\r\n<QuoteArea/>\r\n   \r\n      <ProcessSection />\r\n    <FaqArea/>\r\n   <BlogArea/> --> \r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, nextTick } from 'vue'\r\nimport PageLoader from '~/components/pageLoader/PageLoader.vue'\r\nimport Header from '~/components/pageHeader/Header.vue'\r\nimport CarouselSlide from '~/components/homePage/CarouselSlide.vue'\r\nimport AboutServices from '~/components/homePage/AboutServices.vue'\r\nimport AboutArea from '~/components/homePage/AboutArea.vue'\r\nimport  OurVision from '~/components/homePage/OurVision.vue'\r\nimport SafetyPolicy from '~/components/homePage/SafetyPolicy.vue'\r\nimport CounterSection from '~/components/homePage/CounterSection.vue'\r\nimport TeamArea from '~/components/homePage/TeamArea.vue'\r\nimport VideoArea from '~/components/homePage/VideoArea.vue'\r\nimport PartnerArea from '~/components/homePage/PartnerArea.vue'\r\nimport Footer from '~/components/pageFooter/Footer.vue'\r\n\r\nconst { loading } = usePageLoader()\r\n\r\nonMounted(async () => {\r\n  // Wait for DOM rendering\r\n  await nextTick()\r\n\r\n  // Wait for all images to load\r\n  await waitForAllImages()\r\n\r\n  // Optional: delay to smooth UX\r\n  setTimeout(() => {\r\n    loading.value = false\r\n  }, 300)\r\n})\r\n\r\nfunction waitForAllImages() {\r\n  const images = Array.from(document.images)\r\n  const unloaded = images.filter(img => !img.complete)\r\n\r\n  if (!unloaded.length) return Promise.resolve()\r\n\r\n  return Promise.all(\r\n    unloaded.map(\r\n      img =>\r\n        new Promise(resolve => {\r\n          img.onload = img.onerror = resolve\r\n        })\r\n    )\r\n  )\r\n}\r\n</script>\r\n"],"version":3}